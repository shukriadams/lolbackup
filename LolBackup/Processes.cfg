<?xml version="1.0" encoding="utf-8" ?>
<!--
    ######################################################################################################################
    This is where you configure what Lolbackup will back up.
    
    All jobs are run in the order they are listed, so you can do bouncing backups where files backed up in one
    job can be copied further by a later job. This is useful if, for example, you want to back all your files up to a local
    drive, but then you want to synch your most important backup files from your backup drive to say, a Dropbox folder.
    ######################################################################################################################


    To create a job, add a <process /> node to the root node. Add the following two attributes to it :

    sourceDirectory="c:\foo" (location to copy files from. Must exist.)
    targetDirectory="d:\bar" (location to copy files to. Must exist - will not be created automatically.)
    
    You can add the following optional attributes :
    
    versionFiles="true" (must be true or false. If true, backup process with create a new file each time a file is changed. Default is false.)
    deleteOrphans="true" (must be true or false. If true, backed up folders and files will be deleted if the originals no longer exists. Default is false. 
    USE THIS FEATURE WITH CARE! Every item in your backup target path that cannot be matched to a source file will be deleted without warning.)
-->


<processes>
  <process sourceDirectory="c:\foo" targetDirectory="c:\bar" versionFiles="false" deleteOrphans="true">
   
    
    <!-- 
    Add folder under sourceDirectory that should not be backed up. Paths can be full or partial match, or be the folder name only
    
    <blockedFolders>
      <blockedFolder>c:\testSource\dontbackmeupbro</blockedFolder> 
      <blockedFolder>.Trash</blockedFolder> 
    </blockedFolders>
    
    -->
    
    
    <!-- 
    Leave empty to allow all. Add file extensions to prevent backup of matching files.
    Extension format can be prefixed with a fullstop, egs, both "dll" and ".dll" are permitted. 
    
    <blockList>
      <type>cs</type>
      <type>.pdb</type>
      <type>dll</type>
      <type>.exe</type>
    </blockList>

  -->

    
    <!-- 
    Add file extensions to backup matching files only. Extension can be prefixed with
    a fullstop, egs, both "dll" and ".dll" are permitted. Note that block overrides allow. 
    
    <allowList>
      <type>.cs</type>
      <type>txt</type>
    </allowList>
    
    -->    
   
    
  </process>
</processes>